{
	"info": {
		"_postman_id": "f716a8b3-4d71-4fa2-a9e1-5ce45f837e88",
		"name": "Bybit Inverse_Perp for Newman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseBody){",
							"    var jsonData = JSON.parse(responseBody);",
							"    if(jsonData.hasOwnProperty(\"result\") && jsonData.result.hasOwnProperty(\"order_id\")){",
							"        postman.setEnvironmentVariable(\"Inverse_Perp_orderId\", jsonData.result.order_id);",
							"    }",
							"    else{",
							"        postman.setEnvironmentVariable(\"Inverse_Perp_orderId\",\"\");",
							"        console.log(\"Order placing failed and skip order deletion\");",
							"        postman.setNextRequest(null);",
							"    }",
							"    pm.test(\"Order placing returns true\", () => {",
							"    pm.expect(jsonData.ret_msg).to.eq(\"OK\");",
							"    });",
							"}",
							"else{",
							"    console.log(\"No responseBody returned\");",
							"    postman.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/v2/private/order/create?side=Buy&symbol=BTCUSD&order_type=Limit&qty=10&price=20000&api_key={{bybit-api-key}}&time_in_force=GoodTillCancel&timestamp={{timestamp}}&sign={{signature}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"private",
						"order",
						"create"
					],
					"query": [
						{
							"key": "side",
							"value": "Buy"
						},
						{
							"key": "symbol",
							"value": "BTCUSD"
						},
						{
							"key": "order_type",
							"value": "Limit"
						},
						{
							"key": "qty",
							"value": "10"
						},
						{
							"key": "price",
							"value": "20000"
						},
						{
							"key": "api_key",
							"value": "{{bybit-api-key}}"
						},
						{
							"key": "time_in_force",
							"value": "GoodTillCancel"
						},
						{
							"key": "timestamp",
							"value": "{{timestamp}}"
						},
						{
							"key": "sign",
							"value": "{{signature}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseBody){",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.test(\"Order Query returns true\", () => {",
							"    pm.expect(jsonData.ret_msg).to.eq(\"OK\");",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v2/private/order?symbol=BTCUSD&order_id={{Inverse_Perp_orderId}}&api_key={{bybit-api-key}}&timestamp={{timestamp}}&sign={{signature}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"private",
						"order"
					],
					"query": [
						{
							"key": "symbol",
							"value": "BTCUSD"
						},
						{
							"key": "order_id",
							"value": "{{Inverse_Perp_orderId}}"
						},
						{
							"key": "api_key",
							"value": "{{bybit-api-key}}"
						},
						{
							"key": "timestamp",
							"value": "{{timestamp}}"
						},
						{
							"key": "sign",
							"value": "{{signature}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cancel order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseBody){",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.test(\"Order Cancellation returns true\", () => {",
							"    pm.expect(jsonData.ret_msg).to.eq(\"OK\");",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/v2/private/order/cancel?symbol=BTCUSD&order_id={{Inverse_Perp_orderId}}&api_key={{bybit-api-key}}&timestamp={{timestamp}}&sign={{signature}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"v2",
						"private",
						"order",
						"cancel"
					],
					"query": [
						{
							"key": "symbol",
							"value": "BTCUSD"
						},
						{
							"key": "order_id",
							"value": "{{Inverse_Perp_orderId}}"
						},
						{
							"key": "api_key",
							"value": "{{bybit-api-key}}"
						},
						{
							"key": "timestamp",
							"value": "{{timestamp}}"
						},
						{
							"key": "sign",
							"value": "{{signature}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const ts  = Date.now();",
					"pm.environment.set(\"timestamp\", ts);",
					"",
					"let paramsObject = {};",
					"",
					"const bybit_api_secret = pm.environment.get(\"bybit-api-secret\");",
					"",
					"const parameters = pm.request.url.query;",
					"console.log(\"start\");",
					"console.log(parameters);",
					"",
					"parameters.map((param) => {",
					"    if (param.key != 'sign' && ",
					"        //param.key != 'timestamp' && ",
					"        !is_empty(param.value) &&",
					"        !is_disabled(param.disabled)) {",
					"            if(param.key=='timestamp'){",
					"                paramsObject[param.key] = ts;",
					"            }",
					"            else if(param.key=='api_key'){",
					"                paramsObject[param.key] = pm.environment.get(\"bybit-api-key\");",
					"            }",
					"            else if(param.key=='order_id'){",
					"                paramsObject[param.key] = pm.environment.get(\"Inverse_Perp_orderId\");",
					"            }",
					"            else{",
					"                paramsObject[param.key] = param.value;",
					"            }",
					"            //console.log(encodeURIComponent(param.value));",
					"            //pm.environment.set(param.key, encodeURIComponent(param.value));",
					"    }",
					"})",
					"        ",
					"//Object.assign(paramsObject, {'timestamp': ts});",
					"",
					"if (bybit_api_secret) {",
					"    const queryString = Object.keys(paramsObject).sort().map((key) => {",
					"        return `${key}=${paramsObject[key]}`;",
					"    }).join('&');",
					"    console.log(queryString);",
					"    const signature = CryptoJS.HmacSHA256(queryString, bybit_api_secret).toString();",
					"    pm.environment.set(\"signature\", signature);",
					"}",
					"",
					"",
					"function is_disabled(str) {",
					"    return str == true;",
					"}",
					"",
					"function is_empty(str) {",
					"    if (typeof str == 'undefined' ||",
					"        !str || ",
					"        str.length === 0 || ",
					"        str === \"\" ||",
					"        !/[^\\s]/.test(str) ||",
					"        /^\\s*$/.test(str) ||",
					"        str.replace(/\\s/g,\"\") === \"\")",
					"    {",
					"        return true;",
					"    }",
					"    else",
					"    {",
					"        return false;",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}